@startuml
abstract class AbstractAircraft
{
	# int maxHp
    # int hp
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp):void
    + decreaseHp(int decrease):void
    + getHp():int
    + makeSupply():List<AbstractSupply>
    + {abstract} shoot():List<BaseBullet>
 }
 abstract class AbstractSupply
 {
     + AbstractSupply(int locationX, int locationY, int speedX, int speedY):void
     + takeEffect():void
 }

 interface EnemyFactory
 {
     +{abstract} creatEnemy(double manification):AbstractAircraft
 }
 interface SupplyFactory
 {
     +{abstract} creatSupply(int locationX, int locationY):AbstractSupply
 }

 class MobEnemyFactory{
     + creatEnemy(double manification):AbstractAircraft
 }

 class EliteEnemyFactory{
     + creatEnemy(double manification):AbstractAircraft
 }

 class BossEnemyFactory{
     + creatEnemy(double manification):AbstractAircraft
 }

 class BloodSupplyFactory{
     + creatSupply(int locationX, int locationY):AbstractSupply
 }

 class BombSupplyFactory{
     + creatSupply(int locationX, int locationY):AbstractSupply
 }

 class FireSupplyFactory{
     + creatSupply(int locationX, int locationY):AbstractSupply
 }

 AbstractSupply <|-- BloodSupply
 AbstractSupply <|-- BombSupply
 AbstractSupply <|-- FireSupply

 EnemyFactory <|.. MobEnemyFactory
 EnemyFactory <|.. EliteEnemyFactory
 EnemyFactory <|.. BossEnemyFactory

 SupplyFactory <|.. BloodSupplyFactory
 SupplyFactory <|.. BombSupplyFactory
 SupplyFactory <|.. FireSupplyFactory

 MobEnemyFactory ..> MobEnemy :creat
 EliteEnemyFactory ..> EliteEnemy :creat
 BossEnemyFactory ..> BossEnemy :creat

 BloodSupplyFactory ..> BloodSupply :creat
 FireSupplyFactory ..> FireSupply:creat
 BombSupplyFactory ..> BombSupply:creat

 AbstractAircraft <|-- MobEnemy
 AbstractAircraft <|-- EliteEnemy
 AbstractAircraft <|-- BossEnemy
class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<Bullet>
}

class EliteEnemy{
    - int shootNum
    - int power
    - int direction
    - int strategy
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<Bullet>
    + explode():void
}

class BossEnemy{
    - int shootNum
    - int power
    - int direction
    - int strategy
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<Bullet>
    + explode()"void
}

class BloodSupply{
    + int maxHp
    + int heal
    + BloodSupply(int locationX, int locationY,
    int speedX, int speedY):void
    + takeEffect():void
}

class BombSupply{
    + BombSupply(int locationX, int locationY,
    int speedX, int speedY):void
    + takeEffect(HeroAircraft heroAircraft):void
}

class FireSupply{
    + FireSupply(int locationX, int locationY,
    int speedX, int speedY):void
    + takeEffect(HeroAircraft heroAircraft):void
}
@enduml